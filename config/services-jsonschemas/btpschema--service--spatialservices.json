{
    "category": "SERVICE",
    "name": "spatialservices",
    "defs": [
        
        {
            "ref-attribute": "parameters",
            "ref-level": "plan",
            "ref-value": "standard",
            "def-name": "parameters--spatialservices--standard",
            "def-structure":
                {"service_binding": {"create": {"parameters": {"$schema": "http://json-schema.org/draft-04/schema#", "properties": {"abap_endpoint_timeout": {"description": "Timeout for requests issued by approuter to ABAP backend", "maximum": 600000, "type": ["integer", "null"]}}, "type": "object"}}}, "service_instance": {"create": {"parameters": {"$schema": "http://json-schema.org/draft-04/schema#", "oneOf": [{"additionalProperties": false, "properties": {"addon_product_name": {"description": "Registered name of the addon product. Will be passed through to ABAP OEM Plan", "type": "string"}, "addon_product_version": {"description": "Version of the addon product that should be installed. Will be passed through to ABAP OEM Plan", "type": "string"}, "consumer_id_pattern": {"description": "String containing a regular expression with a capturing group. The subdomain of the consumer is matched against this regular expression. The value of the first capturing group is used as consumer id.", "type": "string"}, "consumer_tenant_limit": {"default": 1, "description": "Maximum number of tenants in ABAP System", "maximum": 800, "minimum": 1, "type": "integer"}, "name": {"description": "Name of the solution", "type": "string"}, "provider_admin_email": {"description": "Email address of initial provider user. Will be passed through to ABAP OEM Plan", "format": "email", "type": "string"}, "sap_system_name": {"description": "Name of the SAP system", "pattern": "(^$)|(^(?!ADD|ALL|AMD|AND|ANY|ARE|ASC|AUX|AVG|BIT|CDC|COM|CON|DBA|END|EPS|FOR|GET|GID|IBM|INT|KEY|LOG|LPT|MAP|MAX|MIN|MON|NIX|NOT|NUL|OFF|OLD|OMS|OUT|PAD|PRN|RAW|REF|ROW|SAP|SET|SGA|SHG|SID|SQL|SUM|SYS|TMP|TOP|UID|USE|USR|VAR)[A-Z][A-Z0-9]{2}$)", "type": "string"}, "size_of_persistence": {"default": 4, "description": "Default size of the ABAP system (in blocks of the size 16 GB). Will be passed through to ABAP OEM Plan", "enum": [4, 8, 16, 32, 64], "type": "integer"}, "size_of_runtime": {"default": 1, "description": "Default size of the HANA database (in blocks of the size 16 GB) of the ABAP System. Will be passed through to ABAP OEM Plan", "enum": [1, 2, 4, 6, 8], "type": "integer"}, "tenant_mode": {"description": "Decides whether a customer will have a tenant in a dedicated system (single) or a shared system (multi)", "enum": ["single", "multi"], "type": "string"}, "usage": {"description": "Whether it is a test or productive solution", "enum": ["test", "prod"], "type": "string"}, "xs-security": {"properties": {"xsappname": {"description": "xsappname used for the OAuth clone during the instance creation", "type": "string"}}, "type": "object"}}, "required": ["name", "consumer_id_pattern", "size_of_runtime", "size_of_persistence", "tenant_mode", "provider_admin_email", "usage"], "type": "object"}, {"additionalProperties": false, "properties": {"consumer_id_pattern": {"description": "String containing a regular expression with a capturing group. The subdomain of the consumer is matched against this regular expression. The value of the first capturing group is used as consumer id.", "type": "string"}, "name": {"description": "Name of the solution", "type": "string"}, "plans": {"items": {"properties": {"addon_product_name": {"description": "Registered name of the addon product. Will be passed through to ABAP OEM Plan", "type": "string"}, "addon_product_version": {"description": "Version of the addon product that should be installed. Will be passed through to ABAP OEM Plan", "type": "string"}, "consumer_tenant_limit": {"default": 1, "description": "Maximum number of tenants in ABAP System", "maximum": 800, "minimum": 1, "type": "integer"}, "plan_name": {"default": "default", "description": "Name of the plan", "pattern": "^[A-Z0-9a-z-_/ ]*$", "type": "string"}, "provider_admin_email": {"description": "Email address of initial provider user. Will be passed through to ABAP OEM Plan", "format": "email", "type": "string"}, "sap_system_name": {"description": "Name of the SAP system", "pattern": "(^$)|(^(?!ADD|ALL|AMD|AND|ANY|ARE|ASC|AUX|AVG|BIT|CDC|COM|CON|DBA|END|EPS|FOR|GET|GID|IBM|INT|KEY|LOG|LPT|MAP|MAX|MIN|MON|NIX|NOT|NUL|OFF|OLD|OMS|OUT|PAD|PRN|RAW|REF|ROW|SAP|SET|SGA|SHG|SID|SQL|SUM|SYS|TMP|TOP|UID|USE|USR|VAR)[A-Z][A-Z0-9]{2}$)", "type": "string"}, "size_of_persistence": {"default": 4, "description": "Default size of the ABAP system (in blocks of the size 16 GB). Will be passed through to ABAP OEM Plan", "enum": [4, 8, 16, 32, 64], "type": "integer"}, "size_of_runtime": {"default": 1, "description": "Default size of the HANA database (in blocks of the size 16 GB) of the ABAP System. Will be passed through to ABAP OEM Plan", "enum": [1, 2, 4, 6, 8], "type": "integer"}, "tenant_mode": {"description": "Decides whether a customer will have a tenant in a dedicated system (single) or a shared system (multi)", "enum": ["single", "multi"], "type": "string"}, "usage": {"description": "Whether it is a test or productive solution", "enum": ["test", "prod"], "type": "string"}}, "required": ["plan_name", "size_of_runtime", "size_of_persistence", "tenant_mode", "provider_admin_email", "usage"], "type": "object"}, "minItems": 1, "type": "array"}, "xs-security": {"properties": {"xsappname": {"description": "xsappname used for the OAuth clone during the instance creation", "type": "string"}}, "type": "object"}}, "required": ["name", "consumer_id_pattern", "plans"], "type": "object"}], "type": "object"}}}}
            
        },
        
        {
            "ref-attribute": "parameters",
            "ref-level": "plan",
            "ref-value": "lite",
            "def-name": "parameters--spatialservices--lite",
            "def-structure":
                {"service_binding": {"create": {"parameters": {"$schema": "http://json-schema.org/draft-04/schema#", "anyOf": [{"required": ["scaling_rules"]}, {"required": ["schedules"]}], "definitions": {"recurring_schedule": {"oneOf": [{"required": ["days_of_week"]}, {"required": ["days_of_month"]}], "properties": {"days_of_month": {"description": "The list of the days of the month when to trigger scaling. Values ranging from 1 to 31", "items": {"enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "type": "number"}, "minItems": 1, "type": "array", "uniqueItems": true}, "days_of_week": {"description": "The list of the days of the week when to trigger scaling. Values ranging from 1 to 7", "items": {"enum": [1, 2, 3, 4, 5, 6, 7], "type": "number"}, "minItems": 1, "type": "array", "uniqueItems": true}, "end_date": {"description": "End date of the recurrence in YYYY-MM-DD format", "oneOf": [{"pattern": "^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$", "type": "string"}, {"enum": [""], "type": "string"}]}, "end_time": {"description": "End time of the recurrence in 24 hour format", "pattern": "^(2[0-3]|1[0-9]|0[0-9]):([0-5][0-9])$", "type": "string"}, "initial_min_instance_count": {"description": "The number of instances to scale up to as soon as the recurrence period starts", "minimum": 1, "type": "integer"}, "instance_max_count": {"description": "Maximum number of instances to scale up during recurrence period", "minimum": 1, "type": "integer"}, "instance_min_count": {"description": "The number of instances to scale down to once recurrence period", "minimum": 1, "type": "integer"}, "start_date": {"description": "Start date of the recurrence in YYYY-MM-DD format", "oneOf": [{"pattern": "^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$", "type": "string"}, {"enum": [""], "type": "string"}]}, "start_time": {"description": "Start time of the recurrence in 24 hour format", "pattern": "^(2[0-3]|1[0-9]|0[0-9]):([0-5][0-9])$", "type": "string"}}, "required": ["start_time", "end_time", "instance_min_count", "instance_max_count"], "type": "object"}, "scaling_rules": {"properties": {"adjustment": {"description": "Magnitude of scaling in each step, +1 means scale up 1 Instance -2 means scale down 2 instances", "pattern": "^[-+][1-9]+[0-9]*$", "type": "string"}, "breach_duration_secs": {"description": "The length of the past period when a scaling action might be triggered based on metric usage", "maximum": 3600, "minimum": 60, "type": "number"}, "cool_down_secs": {"description": "The interval between two successive scaling activity", "maximum": 3600, "minimum": 60, "type": "number"}, "metric_type": {"pattern": "^[a-zA-Z0-9_]+$", "type": "string"}, "operator": {"enum": ["\u003c", "\u003e", "\u003c=", "\u003e="], "type": "string"}, "threshold": {"type": "number"}}, "required": ["metric_type", "threshold", "operator", "adjustment"], "type": "object"}, "schedules": {"anyOf": [{"required": ["specific_date"]}, {"required": ["recurring_schedule"]}], "properties": {"recurring_schedule": {"items": {"$ref": "#/definitions/recurring_schedule"}, "maxItems": 2, "minItems": 1, "type": "array"}, "specific_date": {"items": {"$ref": "#/definitions/specific_date"}, "maxItems": 2, "minItems": 1, "type": "array"}, "timezone": {"type": "string"}}, "required": ["timezone"], "type": "object"}, "specific_date": {"properties": {"end_date_time": {"description": "End date and time to scale in YYYY-MM-DDTHH:MM format", "pattern": "^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|1[0-9]|0[0-9]):([0-5][0-9])$", "type": "string"}, "initial_min_instance_count": {"description": "The number of instances to scale up to as soon as the recurrence period starts", "minimum": 1, "type": "integer"}, "instance_max_count": {"description": "Maximum number of instances to scale up during recurrence period", "minimum": 1, "type": "integer"}, "instance_min_count": {"description": "The number of instances to scale down to once recurrence period", "minimum": 1, "type": "integer"}, "start_date_time": {"description": "Start date and time to scale in YYYY-MM-DDTHH:MM format", "pattern": "^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|1[0-9]|0[0-9]):([0-5][0-9])$", "type": "string"}}, "required": ["start_date_time", "end_date_time", "instance_min_count", "instance_max_count"], "type": "object"}}, "description": "schema for autoscaler policy for lite plan", "properties": {"instance_max_count": {"description": "Maximum how many instances of application can be provisioned as part of application scaling", "minimum": 1, "type": "integer"}, "instance_min_count": {"description": "Minimum number of application instance always runs", "minimum": 1, "type": "integer"}, "scaling_rules": {"items": {"$ref": "#/definitions/scaling_rules"}, "maxItems": 4, "type": "array"}, "schedules": {"$ref": "#/definitions/schedules"}}, "required": ["instance_min_count", "instance_max_count"], "type": "object"}}}}
            
        }
         
    ]
}